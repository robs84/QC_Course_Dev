The current standard algorithm for encryption is RSA.  RSA relies in the challenge of factoring very large composite which are numbers whose factors are prime numbers.  Factoring composite numbers is a problem that requires greater than polynomial time to resolve using a classical computer.  Factoring can be mapped into a period finding problem.  In this problem, the periodic function ($f(x) = f(x+r)$) has a unique solution for each input, the number of arguments ($N$) can be divided by the period ($r$) without a remainder, and that the number of periods is larger than the period itself ($\frac{N}{r} >> r$).  This can be a hard problem when M is very large.  Shor's algorithm is a quantum algorithm that is able to find the period (and thereby factorize) in polynomial time, which is a considerable improvement over anything a classical computer can do.  In this module you will be guided in implementing a very Shor's algorithm in Qiskit.  Details about Shor's algorithm can be found in the following resource:

S. Beauregard, Circuit for shorâ€™s algorithm using 2n+ 3 qubits, arXiv preprint quant-ph/0205095 (2002).
